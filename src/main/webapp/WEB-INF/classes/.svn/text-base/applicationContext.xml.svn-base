<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
       		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
       		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
       default-lazy-init="true">

	<!---通过该语句可以搜索com及com下子包中的类--> 
	<context:component-scan base-package="com.jingc"/>

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 
		 	defaultAutoCommit：设置从数据源中返回的连接是否采用自动提交机制，默认值为 true； 
		    defaultReadOnly：设置数据源是否仅能执行只读操作， 默认值为 false； 
		    maxActive：最大连接数据库连接数，设置为0时，表示没有限制； 
		    maxIdle：最大等待连接中的数量，设置为0时，表示没有限制； 
		    maxWait：最大等待秒数，单位为毫秒， 超过时间会报出错误信息； 
		    validationQuery：用于验证连接是否成功的查询SQL语句，SQL语句必须至少要返回一行数据， 如你可以简单地设置为：“select count(*) from user”； 
		    removeAbandoned：是否自我中断，默认是 false ； 
		    removeAbandonedTimeout：几秒后数据连接会自动断开，在removeAbandoned为true，提供该值； 
		    logAbandoned：是否记录中断事件， 默认为 false；
		-->
		<property name="maxActive"><value>250</value></property>     
	    <property name="initialSize"><value>1</value></property>     
	    <property name="maxWait"><value>60000</value></property>     
	    <property name="maxIdle"><value>20</value></property>     
	    <property name="minIdle"><value>3</value></property>     
	    <property name="removeAbandoned"><value>true</value></property>     
	    <property name="removeAbandonedTimeout"><value>180</value></property>  
	    <property name="validationQuery"><value>select 1 from dual</value></property>  
	    <property name="connectionProperties"><value>clientEncoding=UTF-8</value></property>     
	</bean>
	
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />

		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations">
			<list>
				<!-- 表示在resultmap包或以下所有目录中，以resultmap.xml结尾所有文件 -->
				<value>classpath:mapper/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 开启事务注解驱动 -->  
    <tx:annotation-driven />  
  
    <!-- 事务管理器 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
	
	<!-- 单独配置一个Mapper； 这种模式就是得给每个mapper接口配置一个bean -->
	<!--
		<bean id="accountMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean"> <property
		name="mapperInterface" value="com.hoo.mapper.AccountMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean>
		<bean id="companyMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean"> <property
		name="mapperInterface" value="com.hoo.mapper.CompanyMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean>
	-->
	<!--
		通过扫描的模式，扫描目录在com/hoo/mapper目录下，所有的mapper都继承SqlMapper接口的接口，
		这样一个bean就可以了
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jingc.busi.common.mapper" />
		<property name="markerInterface" value="com.jingc.busi.common.mapper.SqlMapper" />
	</bean>
	<!-- 
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
	    <property name="mapperInterface" value="com.suny.map.UserMapper" />
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</bean> -->
	<!--<bean id="plugins" class="com.jingc.common.interceptor.MybatisInterceptor"/>-->
	 

</beans>